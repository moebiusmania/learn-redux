'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _MapCache2 = require('./MapCache');

var _MapCache3 = _interopRequireDefault(_MapCache2);

var _PackageStore = require('./PackageStore');

var _PackageStore2 = _interopRequireDefault(_PackageStore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function clear(store) {
  _lodash2.default.invokeMap(store, 'cache.clear');
}

function clearDeep(store) {
  clear(store);
  _lodash2.default.invokeMap(_lodash2.default.toArray(store.__data__), '[1].clear');
}

function getByResolver(type, key) {
  return type + '/' + key;
}

/*----------------------------------------------------------------------------*/

var Store = function (_MapCache) {
  _inherits(Store, _MapCache);

  function Store(pkgPaths) {
    _classCallCheck(this, Store);

    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Store).call(this));

    _lodash2.default.each(pkgPaths, function (pkgPath) {
      return _this.set(pkgPath);
    });

    _this.getStoreBy = _lodash2.default.memoize(_this.getStoreBy, getByResolver);
    _this.getMapBy = _lodash2.default.memoize(_this.getMapBy, getByResolver);
    _this.getValueBy = _lodash2.default.memoize(_this.getValueBy, getByResolver);
    return _this;
  }

  _createClass(Store, [{
    key: 'clear',
    value: function clear() {
      clearDeep(this);
      return this;
    }
  }, {
    key: 'delete',
    value: function _delete(key) {
      clear(this);
      return _get(Object.getPrototypeOf(Store.prototype), 'delete', this).call(this, key);
    }
  }, {
    key: 'getStoreBy',
    value: function getStoreBy(type, key) {
      return _get(Object.getPrototypeOf(Store.prototype), 'find', this).call(this, function (entry) {
        return _lodash2.default.invoke(entry.get(type), 'has', key);
      });
    }
  }, {
    key: 'getMapBy',
    value: function getMapBy(type, key) {
      return _lodash2.default.invoke(this.getStoreBy(type, key), 'get', type);
    }
  }, {
    key: 'getValueBy',
    value: function getValueBy(type, key) {
      return _lodash2.default.invoke(this.getMapBy(type, key), 'get', key);
    }
  }, {
    key: 'set',
    value: function set(pkgPath) {
      var pkgStore = arguments.length <= 1 || arguments[1] === undefined ? new _PackageStore2.default(pkgPath) : arguments[1];

      return _get(Object.getPrototypeOf(Store.prototype), 'set', this).call(this, pkgPath, pkgStore);
    }
  }]);

  return Store;
}(_MapCache3.default);

exports.default = Store;
;
module.exports = exports['default'];