'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _glob = require('glob');

var _glob2 = _interopRequireDefault(_glob);

var _MapCache = require('./MapCache');

var _MapCache2 = _interopRequireDefault(_MapCache);

var _module = require('module');

var _module2 = _interopRequireDefault(_module);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultIds = ['lodash', 'lodash-es', 'lodash-compat'];

var ids = [];

var modules = _lodash2.default.transform(defaultIds, function (modules, id) {
  var modulePath = getModulePath(id);
  if (modulePath) {
    ids.push(id);
    modules.set(id, createModuleMap(modulePath));
  }
}, new _MapCache2.default());

/*----------------------------------------------------------------------------*/

function createModuleMap(modulePath) {
  var basePaths = modulePath ? _glob2.default.sync(_path2.default.join(modulePath, '**/')) : [];
  return _lodash2.default.reduce(basePaths, function (result, basePath) {
    var base = _path2.default.relative(modulePath, basePath);
    var filenames = _glob2.default.sync(_path2.default.join(basePath, '*.js'));
    var names = filenames.map(function (filename) {
      return _path2.default.basename(filename, '.js');
    });
    return result.set(base, new Set(names));
  }, new _MapCache2.default());
}

function getModulePath(id) {
  var from = arguments.length <= 1 || arguments[1] === undefined ? process.cwd() : arguments[1];

  try {
    var dirs = _path2.default.dirname(_module2.default._resolveFilename(id, _lodash2.default.assign(new _module2.default(), {
      'paths': _module2.default._nodeModulePaths(from)
    }))).split(_path2.default.sep);

    if (dirs[0] == '') {
      dirs[0] = _path2.default.sep;
    }
    var index = dirs.length;

    while (index--) {
      var dirSub = dirs.slice(0, index + 1);
      var dirPath = dirSub.join('/');
      var pkgPath = _path2.default.join(dirPath, 'package.json');

      if (dirs[index - 1] === 'node_modules' || _fs2.default.existsSync(pkgPath) && require(pkgPath).name == id) {
        return dirPath;
      }
    }
    return dirs.join('/');
  } catch (e) {}
  return '';
}

function config() {
  var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  var _ref$cwd = _ref.cwd;
  var cwd = _ref$cwd === undefined ? process.cwd() : _ref$cwd;
  var _ref$id = _ref.id;
  var id = _ref$id === undefined ? ids[0] : _ref$id;

  _lodash2.default.each(_lodash2.default.castArray(id), function (id) {
    if (!modules.get(id)) {
      ids.push(id);
      modules.set(id, createModuleMap(getModulePath(id, cwd)));
    }
  });
  return { ids: ids, modules: modules };
}

exports.default = config;
module.exports = exports['default'];